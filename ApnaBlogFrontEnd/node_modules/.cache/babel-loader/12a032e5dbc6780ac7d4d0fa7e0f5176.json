{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Appliction\\\\Running Apps\\\\blog-frontend\\\\src\\\\Pages\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { login } from \"../lib/api\";\nimport LoginForm from \"../Components/Forms/LoginForm\";\nimport AuthContext from \"../store/auth-context\";\nimport Banner from \"../Components/Banner\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  const [isLoginSuccess, setIsLoginSuccess] = useState(false);\n  {\n    /* Standalone button for About Us */\n  }\n\n  /*#__PURE__*/\n  _jsxDEV(Link, {\n    className: \"button btn btn-outline-secondary me-1 my-1 text-decoration-none\",\n    to: \"/about-us\",\n    as: NavLink,\n    children: t(\"AboutUs\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n\n  const [loginMessage, setLoginMessage] = useState(\"\");\n  const authCtx = useContext(AuthContext);\n  const {\n    t\n  } = useTranslation();\n\n  const onSubmit = (loginRequest, formikHelpers) => {\n    setTimeout(() => {\n      login(loginRequest).then(loginResponse => {\n        setIsLoginSuccess(true);\n        setLoginMessage(`${t(\"signedInAs\")} ${loginResponse.userName}`);\n        setTimeout(() => {\n          authCtx.login(loginResponse);\n        }, 2000);\n      }).catch(error => {\n        if (error.message.includes(\"password\")) {\n          formikHelpers.setFieldError(\"invalidPassword\", t(\"validation:invalidPassword\"));\n        } else {\n          formikHelpers.setFieldError(\"invalidUsername\", t(\"validation:invalidUsername\"));\n        }\n      }).finally(() => {\n        formikHelpers.setSubmitting(false);\n      });\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-4 d-flex flex-column align-content-center\",\n      style: {\n        marginTop: props.headerHeight,\n        marginBottom: props.footerHeight\n      },\n      children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n        isSubmitted: isLoginSuccess,\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), isLoginSuccess && /*#__PURE__*/_jsxDEV(Banner, {\n        className: \"text-success border-success mt-4\",\n        message: loginMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"5YOmp+XeGj2I1l2uKlTMEngE0p4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useContext","useState","Container","Row","login","LoginForm","AuthContext","Banner","useTranslation","LoginPage","props","isLoginSuccess","setIsLoginSuccess","NavLink","t","loginMessage","setLoginMessage","authCtx","onSubmit","loginRequest","formikHelpers","setTimeout","then","loginResponse","userName","catch","error","message","includes","setFieldError","finally","setSubmitting","marginTop","headerHeight","marginBottom","footerHeight"],"sources":["E:/React Appliction/Running Apps/blog-frontend/src/Pages/LoginPage.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { login } from \"../lib/api\";\nimport LoginForm from \"../Components/Forms/LoginForm\";\nimport AuthContext from \"../store/auth-context\";\nimport Banner from \"../Components/Banner\";\nimport { useTranslation } from \"react-i18next\";\n\nconst LoginPage = (props) => {\n  const [isLoginSuccess, setIsLoginSuccess] = useState(false);   {/* Standalone button for About Us */}\n  <Link\n    className=\"button btn btn-outline-secondary me-1 my-1 text-decoration-none\"\n    to=\"/about-us\"\n    as={NavLink}\n  >\n    {t(\"AboutUs\")}\n  </Link>\n  const [loginMessage, setLoginMessage] = useState(\"\");\n  const authCtx = useContext(AuthContext);\n  const { t } = useTranslation();\n\n  const onSubmit = (loginRequest, formikHelpers) => {\n    setTimeout(() => {\n      login(loginRequest)\n        .then((loginResponse) => {\n          setIsLoginSuccess(true);\n          setLoginMessage(`${t(\"signedInAs\")} ${loginResponse.userName}`);\n          setTimeout(() => {\n            authCtx.login(loginResponse);\n          }, 2000);\n        })\n        .catch((error) => {\n          if (error.message.includes(\"password\")) {\n            formikHelpers.setFieldError(\n              \"invalidPassword\",\n              t(\"validation:invalidPassword\")\n            );\n          } else {\n            formikHelpers.setFieldError(\n              \"invalidUsername\",\n              t(\"validation:invalidUsername\")\n            );\n          }\n        })\n        .finally(() => {\n          formikHelpers.setSubmitting(false);\n        });\n    }, 1000);\n  };\n\n  return (\n    <Container>\n      <Row\n        className=\"py-4 d-flex flex-column align-content-center\"\n        style={{\n          marginTop: props.headerHeight,\n          marginBottom: props.footerHeight,\n        }}\n      >\n        <LoginForm isSubmitted={isLoginSuccess} onSubmit={onSubmit} />\n        {isLoginSuccess && (\n          <Banner\n            className=\"text-success border-success mt-4\"\n            message={loginMessage}\n          />\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;EAA+D;IAAC;EAAqC;;EACrG;EAAA,QAAC,IAAD;IACE,SAAS,EAAC,iEADZ;IAEE,EAAE,EAAC,WAFL;IAGE,EAAE,EAAEY,OAHN;IAAA,UAKGC,CAAC,CAAC,SAAD;EALJ;IAAA;IAAA;IAAA;EAAA;;EAOA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAMgB,OAAO,GAAGjB,UAAU,CAACM,WAAD,CAA1B;EACA,MAAM;IAAEQ;EAAF,IAAQN,cAAc,EAA5B;;EAEA,MAAMU,QAAQ,GAAG,CAACC,YAAD,EAAeC,aAAf,KAAiC;IAChDC,UAAU,CAAC,MAAM;MACfjB,KAAK,CAACe,YAAD,CAAL,CACGG,IADH,CACSC,aAAD,IAAmB;QACvBX,iBAAiB,CAAC,IAAD,CAAjB;QACAI,eAAe,CAAE,GAAEF,CAAC,CAAC,YAAD,CAAe,IAAGS,aAAa,CAACC,QAAS,EAA9C,CAAf;QACAH,UAAU,CAAC,MAAM;UACfJ,OAAO,CAACb,KAAR,CAAcmB,aAAd;QACD,CAFS,EAEP,IAFO,CAAV;MAGD,CAPH,EAQGE,KARH,CAQUC,KAAD,IAAW;QAChB,IAAIA,KAAK,CAACC,OAAN,CAAcC,QAAd,CAAuB,UAAvB,CAAJ,EAAwC;UACtCR,aAAa,CAACS,aAAd,CACE,iBADF,EAEEf,CAAC,CAAC,4BAAD,CAFH;QAID,CALD,MAKO;UACLM,aAAa,CAACS,aAAd,CACE,iBADF,EAEEf,CAAC,CAAC,4BAAD,CAFH;QAID;MACF,CApBH,EAqBGgB,OArBH,CAqBW,MAAM;QACbV,aAAa,CAACW,aAAd,CAA4B,KAA5B;MACD,CAvBH;IAwBD,CAzBS,EAyBP,IAzBO,CAAV;EA0BD,CA3BD;;EA6BA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MACE,SAAS,EAAC,8CADZ;MAEE,KAAK,EAAE;QACLC,SAAS,EAAEtB,KAAK,CAACuB,YADZ;QAELC,YAAY,EAAExB,KAAK,CAACyB;MAFf,CAFT;MAAA,wBAOE,QAAC,SAAD;QAAW,WAAW,EAAExB,cAAxB;QAAwC,QAAQ,EAAEO;MAAlD;QAAA;QAAA;QAAA;MAAA,QAPF,EAQGP,cAAc,iBACb,QAAC,MAAD;QACE,SAAS,EAAC,kCADZ;QAEE,OAAO,EAAEI;MAFX;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA7DD;;GAAMN,S;UAWUD,c;;;KAXVC,S;AA+DN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}